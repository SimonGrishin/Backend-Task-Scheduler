basePath: /api/v1
definitions:
  main.Task:
    properties:
      _id:
        type: string
      data:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple API documentation example that takes a GIN API using
    mongoDB in GO to handle API calls
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: swagger-task-scheduler-api
  version: "1.0"
paths:
  /tasks:
    get:
      description: Retrieve all tasks from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Add a new task to the database
      parameters:
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/main.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Task'
        "404":
          description: task not found
      security:
      - ApiKeyAuth: []
      summary: Add a new task
      tags:
      - Tasks
  /tasks/{id}:
    delete:
      description: Delete a task from the database by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
          schema:
            type: string
      summary: Delete a task
      tags:
      - Tasks
    get:
      description: Retrieve a task from the database by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Task'
      summary: Get a task by ID
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Update a task in the database by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/main.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Task'
      summary: Update a task
      tags:
      - Tasks
securityDefinitions:
  ApiKeyAuth:
    description: Security feature to test API-keys
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
